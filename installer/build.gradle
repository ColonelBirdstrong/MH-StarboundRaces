buildscript {
    ext.kotlin_version = '1.2.10'

    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.2"
        classpath 'edu.sc.seis.gradle:launch4j:2.4.2'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'edu.sc.seis.launch4j'
apply plugin: 'com.github.johnrengelman.shadow'

group 'me.kgustave'
version '0.1.0'

mainClassName = "${group}.mhinstaller.Main"

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.21'
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-javafx:0.21'
    compile 'org.slf4j:slf4j-api:1.6.1'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

kotlin {
    experimental {
        coroutines = 'ENABLE'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    baseName = "MH-Installer"
    version = ""
    classifier = ""
}

launch4j {
    outfile = 'MHStarboundInstaller.exe'
    mainClassName = project.mainClassName
    copyConfigurable = project.tasks.shadowJar.outputs.files
    jar = "lib/${project.tasks.shadowJar.archiveName}"
}

build {
    dependsOn clean, classes, shadowJar, createExe

    classes.mustRunAfter clean
    shadowJar.mustRunAfter classes
    createExe.mustRunAfter shadowJar
}
